// Code generated by Prisma (prisma@1.28.5). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

import { DocumentNode } from "graphql";
import {
  makePrismaClientClass,
  BaseClientOptions,
  Model
} from "prisma-client-lib";
import { typeDefs } from "./prisma-schema";

export type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &
  U[keyof U];

export interface Exists {
  part: (where?: PartWhereInput) => Promise<boolean>;
  user: (where?: UserWhereInput) => Promise<boolean>;
}

export interface Node {}

export type FragmentableArray<T> = Promise<Array<T>> & Fragmentable;

export interface Fragmentable {
  $fragment<T>(fragment: string | DocumentNode): Promise<T>;
}

export interface Prisma {
  $exists: Exists;
  $graphql: <T = any>(
    query: string,
    variables?: { [key: string]: any }
  ) => Promise<T>;

  /**
   * Queries
   */

  part: (where: PartWhereUniqueInput) => PartPromise;
  parts: (
    args?: {
      where?: PartWhereInput;
      orderBy?: PartOrderByInput;
      skip?: Int;
      after?: String;
      before?: String;
      first?: Int;
      last?: Int;
    }
  ) => FragmentableArray<Part>;
  partsConnection: (
    args?: {
      where?: PartWhereInput;
      orderBy?: PartOrderByInput;
      skip?: Int;
      after?: String;
      before?: String;
      first?: Int;
      last?: Int;
    }
  ) => PartConnectionPromise;
  user: (where: UserWhereUniqueInput) => UserPromise;
  users: (
    args?: {
      where?: UserWhereInput;
      orderBy?: UserOrderByInput;
      skip?: Int;
      after?: String;
      before?: String;
      first?: Int;
      last?: Int;
    }
  ) => FragmentableArray<User>;
  usersConnection: (
    args?: {
      where?: UserWhereInput;
      orderBy?: UserOrderByInput;
      skip?: Int;
      after?: String;
      before?: String;
      first?: Int;
      last?: Int;
    }
  ) => UserConnectionPromise;
  node: (args: { id: ID_Output }) => Node;

  /**
   * Mutations
   */

  createPart: (data: PartCreateInput) => PartPromise;
  updatePart: (
    args: { data: PartUpdateInput; where: PartWhereUniqueInput }
  ) => PartPromise;
  updateManyParts: (
    args: { data: PartUpdateManyMutationInput; where?: PartWhereInput }
  ) => BatchPayloadPromise;
  upsertPart: (
    args: {
      where: PartWhereUniqueInput;
      create: PartCreateInput;
      update: PartUpdateInput;
    }
  ) => PartPromise;
  deletePart: (where: PartWhereUniqueInput) => PartPromise;
  deleteManyParts: (where?: PartWhereInput) => BatchPayloadPromise;
  createUser: (data: UserCreateInput) => UserPromise;
  updateUser: (
    args: { data: UserUpdateInput; where: UserWhereUniqueInput }
  ) => UserPromise;
  updateManyUsers: (
    args: { data: UserUpdateManyMutationInput; where?: UserWhereInput }
  ) => BatchPayloadPromise;
  upsertUser: (
    args: {
      where: UserWhereUniqueInput;
      create: UserCreateInput;
      update: UserUpdateInput;
    }
  ) => UserPromise;
  deleteUser: (where: UserWhereUniqueInput) => UserPromise;
  deleteManyUsers: (where?: UserWhereInput) => BatchPayloadPromise;

  /**
   * Subscriptions
   */

  $subscribe: Subscription;
}

export interface Subscription {
  part: (
    where?: PartSubscriptionWhereInput
  ) => PartSubscriptionPayloadSubscription;
  user: (
    where?: UserSubscriptionWhereInput
  ) => UserSubscriptionPayloadSubscription;
}

export interface ClientConstructor<T> {
  new (options?: BaseClientOptions): T;
}

/**
 * Types
 */

export type Permission =
  | "ADMIN"
  | "USER"
  | "PARTCREATE"
  | "PARTUPDATE"
  | "PARTDELETE"
  | "PARTEXPORT"
  | "PERMISSIONUPDATE";

export type PartOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "partNumber_ASC"
  | "partNumber_DESC"
  | "arabicLong_ar_sa_ASC"
  | "arabicLong_ar_sa_DESC"
  | "arabicShort_ar_sa_ASC"
  | "arabicShort_ar_sa_DESC"
  | "bulgarianLong_bg_ASC"
  | "bulgarianLong_bg_DESC"
  | "bulgarianShort_bg_ASC"
  | "bulgarianShort_bg_DESC"
  | "catlanLong_ca_ASC"
  | "catlanLong_ca_DESC"
  | "catlanShort_ca_ASC"
  | "catlanShort_ca_DESC"
  | "chineseLong_zh_cn_ASC"
  | "chineseLong_zh_cn_DESC"
  | "chineseShort_zh_cn_ASC"
  | "chineseShort_zh_cn_DESC"
  | "chineseTLong_zh_tw_ASC"
  | "chineseTLong_zh_tw_DESC"
  | "chineseTShort_zh_tw_ASC"
  | "chineseTShort_zh_tw_DESC"
  | "croatianLong_hr_ASC"
  | "croatianLong_hr_DESC"
  | "croatianShort_hr_ASC"
  | "croatianShort_hr_DESC"
  | "czechLong_cs_ASC"
  | "czechLong_cs_DESC"
  | "czechShort_cs_ASC"
  | "czechShort_cs_DESC"
  | "danishLong_da_ASC"
  | "danishLong_da_DESC"
  | "danishShort_da_ASC"
  | "danishShort_da_DESC"
  | "dutchLong_nl_ASC"
  | "dutchLong_nl_DESC"
  | "dutchShort_nl_ASC"
  | "dutchShort_nl_DESC"
  | "englishLong_en_ASC"
  | "englishLong_en_DESC"
  | "englishShort_en_ASC"
  | "englishShort_en_DESC"
  | "extonianLong_et_ASC"
  | "extonianLong_et_DESC"
  | "extonianShort_et_ASC"
  | "extonianShort_et_DESC"
  | "finnishLong_fi_ASC"
  | "finnishLong_fi_DESC"
  | "finnishShort_fi_ASC"
  | "finnishShort_fi_DESC"
  | "frenchLong_fr_ASC"
  | "frenchLong_fr_DESC"
  | "frenchShort_fr_ASC"
  | "frenchShort_fr_DESC"
  | "germanLong_de_ASC"
  | "germanLong_de_DESC"
  | "germanShort_de_ASC"
  | "germanShort_de_DESC"
  | "greekLong_el_ASC"
  | "greekLong_el_DESC"
  | "greekShort_el_ASC"
  | "greekShort_el_DESC"
  | "hebrewLong_he_ASC"
  | "hebrewLong_he_DESC"
  | "hebrewShort_he_ASC"
  | "hebrewShort_he_DESC"
  | "hungarianLong_hu_ASC"
  | "hungarianLong_hu_DESC"
  | "hungarianShort_hu_ASC"
  | "hungarianShort_hu_DESC"
  | "icelandicLong_is_ASC"
  | "icelandicLong_is_DESC"
  | "icelandicShort_is_ASC"
  | "icelandicShort_is_DESC"
  | "indonesianLong_id_ASC"
  | "indonesianLong_id_DESC"
  | "indonesianShort_id_ASC"
  | "indonesianShort_id_DESC"
  | "italianLong_it_ASC"
  | "italianLong_it_DESC"
  | "italianShort_it_ASC"
  | "italianShort_it_DESC"
  | "japaneseLong_ja_ASC"
  | "japaneseLong_ja_DESC"
  | "japaneseShort_ja_ASC"
  | "japaneseShort_ja_DESC"
  | "koreanLong_ko_ASC"
  | "koreanLong_ko_DESC"
  | "koreanShort_ko_ASC"
  | "koreanShort_ko_DESC"
  | "latvianLong_lv_ASC"
  | "latvianLong_lv_DESC"
  | "latvianShort_lv_ASC"
  | "latvianShort_lv_DESC"
  | "lithuanianLong_lt_ASC"
  | "lithuanianLong_lt_DESC"
  | "lithuanianShort_lt_ASC"
  | "lithuanianShort_lt_DESC"
  | "malaysianLong_ms_ASC"
  | "malaysianLong_ms_DESC"
  | "malaysianShort_ms_ASC"
  | "malaysianShort_ms_DESC"
  | "norwegianLong_no_ASC"
  | "norwegianLong_no_DESC"
  | "norwegianShort_no_ASC"
  | "norwegianShort_no_DESC"
  | "polishLong_po_ASC"
  | "polishLong_po_DESC"
  | "polishShort_po_ASC"
  | "polishShort_po_DESC"
  | "portugeseLong_pt_ASC"
  | "portugeseLong_pt_DESC"
  | "portugeseShort_pt_ASC"
  | "portugeseShort_pt_DESC"
  | "romanianLong_ro_ASC"
  | "romanianLong_ro_DESC"
  | "romanianShort_ro_ASC"
  | "romanianShort_ro_DESC"
  | "russianLong_ru_ASC"
  | "russianLong_ru_DESC"
  | "russianShort_ru_ASC"
  | "russianShort_ru_DESC"
  | "serbianLong_sr_ASC"
  | "serbianLong_sr_DESC"
  | "serbianShort_sr_ASC"
  | "serbianShort_sr_DESC"
  | "slovakLong_sk_ASC"
  | "slovakLong_sk_DESC"
  | "slovakShort_sk_ASC"
  | "slovakShort_sk_DESC"
  | "slovenianLong_sl_ASC"
  | "slovenianLong_sl_DESC"
  | "slovenianShort_sl_ASC"
  | "slovenianShort_sl_DESC"
  | "spanishLong_es_ASC"
  | "spanishLong_es_DESC"
  | "spanishShort_es_ASC"
  | "spanishShort_es_DESC"
  | "swedishLong_sv_ASC"
  | "swedishLong_sv_DESC"
  | "swedishShort_sv_ASC"
  | "swedishShort_sv_DESC"
  | "thaiLong_th_ASC"
  | "thaiLong_th_DESC"
  | "thaiShort_th_ASC"
  | "thaiShort_th_DESC"
  | "turkishLong_tr_ASC"
  | "turkishLong_tr_DESC"
  | "turkishShort_tr_ASC"
  | "turkishShort_tr_DESC"
  | "ukranianLong_uk_ASC"
  | "ukranianLong_uk_DESC"
  | "ukranianShort_uk_ASC"
  | "ukranianShort_uk_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type UserOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "name_ASC"
  | "name_DESC"
  | "email_ASC"
  | "email_DESC"
  | "password_ASC"
  | "password_DESC"
  | "resetToken_ASC"
  | "resetToken_DESC"
  | "resetTokenExpiry_ASC"
  | "resetTokenExpiry_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type MutationType = "CREATED" | "UPDATED" | "DELETED";

export interface UserCreatepermissionsInput {
  set?: Permission[] | Permission;
}

export type PartWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  partNumber?: String;
}>;

export interface PartUpdateManyMutationInput {
  partNumber?: String;
  arabicLong_ar_sa?: String;
  arabicShort_ar_sa?: String;
  bulgarianLong_bg?: String;
  bulgarianShort_bg?: String;
  catlanLong_ca?: String;
  catlanShort_ca?: String;
  chineseLong_zh_cn?: String;
  chineseShort_zh_cn?: String;
  chineseTLong_zh_tw?: String;
  chineseTShort_zh_tw?: String;
  croatianLong_hr?: String;
  croatianShort_hr?: String;
  czechLong_cs?: String;
  czechShort_cs?: String;
  danishLong_da?: String;
  danishShort_da?: String;
  dutchLong_nl?: String;
  dutchShort_nl?: String;
  englishLong_en?: String;
  englishShort_en?: String;
  extonianLong_et?: String;
  extonianShort_et?: String;
  finnishLong_fi?: String;
  finnishShort_fi?: String;
  frenchLong_fr?: String;
  frenchShort_fr?: String;
  germanLong_de?: String;
  germanShort_de?: String;
  greekLong_el?: String;
  greekShort_el?: String;
  hebrewLong_he?: String;
  hebrewShort_he?: String;
  hungarianLong_hu?: String;
  hungarianShort_hu?: String;
  icelandicLong_is?: String;
  icelandicShort_is?: String;
  indonesianLong_id?: String;
  indonesianShort_id?: String;
  italianLong_it?: String;
  italianShort_it?: String;
  japaneseLong_ja?: String;
  japaneseShort_ja?: String;
  koreanLong_ko?: String;
  koreanShort_ko?: String;
  latvianLong_lv?: String;
  latvianShort_lv?: String;
  lithuanianLong_lt?: String;
  lithuanianShort_lt?: String;
  malaysianLong_ms?: String;
  malaysianShort_ms?: String;
  norwegianLong_no?: String;
  norwegianShort_no?: String;
  polishLong_po?: String;
  polishShort_po?: String;
  portugeseLong_pt?: String;
  portugeseShort_pt?: String;
  romanianLong_ro?: String;
  romanianShort_ro?: String;
  russianLong_ru?: String;
  russianShort_ru?: String;
  serbianLong_sr?: String;
  serbianShort_sr?: String;
  slovakLong_sk?: String;
  slovakShort_sk?: String;
  slovenianLong_sl?: String;
  slovenianShort_sl?: String;
  spanishLong_es?: String;
  spanishShort_es?: String;
  swedishLong_sv?: String;
  swedishShort_sv?: String;
  thaiLong_th?: String;
  thaiShort_th?: String;
  turkishLong_tr?: String;
  turkishShort_tr?: String;
  ukranianLong_uk?: String;
  ukranianShort_uk?: String;
}

export interface UserUpdateManyMutationInput {
  name?: String;
  email?: String;
  password?: String;
  resetToken?: String;
  resetTokenExpiry?: Float;
  permissions?: UserUpdatepermissionsInput;
}

export interface PartUpdateInput {
  partNumber?: String;
  arabicLong_ar_sa?: String;
  arabicShort_ar_sa?: String;
  bulgarianLong_bg?: String;
  bulgarianShort_bg?: String;
  catlanLong_ca?: String;
  catlanShort_ca?: String;
  chineseLong_zh_cn?: String;
  chineseShort_zh_cn?: String;
  chineseTLong_zh_tw?: String;
  chineseTShort_zh_tw?: String;
  croatianLong_hr?: String;
  croatianShort_hr?: String;
  czechLong_cs?: String;
  czechShort_cs?: String;
  danishLong_da?: String;
  danishShort_da?: String;
  dutchLong_nl?: String;
  dutchShort_nl?: String;
  englishLong_en?: String;
  englishShort_en?: String;
  extonianLong_et?: String;
  extonianShort_et?: String;
  finnishLong_fi?: String;
  finnishShort_fi?: String;
  frenchLong_fr?: String;
  frenchShort_fr?: String;
  germanLong_de?: String;
  germanShort_de?: String;
  greekLong_el?: String;
  greekShort_el?: String;
  hebrewLong_he?: String;
  hebrewShort_he?: String;
  hungarianLong_hu?: String;
  hungarianShort_hu?: String;
  icelandicLong_is?: String;
  icelandicShort_is?: String;
  indonesianLong_id?: String;
  indonesianShort_id?: String;
  italianLong_it?: String;
  italianShort_it?: String;
  japaneseLong_ja?: String;
  japaneseShort_ja?: String;
  koreanLong_ko?: String;
  koreanShort_ko?: String;
  latvianLong_lv?: String;
  latvianShort_lv?: String;
  lithuanianLong_lt?: String;
  lithuanianShort_lt?: String;
  malaysianLong_ms?: String;
  malaysianShort_ms?: String;
  norwegianLong_no?: String;
  norwegianShort_no?: String;
  polishLong_po?: String;
  polishShort_po?: String;
  portugeseLong_pt?: String;
  portugeseShort_pt?: String;
  romanianLong_ro?: String;
  romanianShort_ro?: String;
  russianLong_ru?: String;
  russianShort_ru?: String;
  serbianLong_sr?: String;
  serbianShort_sr?: String;
  slovakLong_sk?: String;
  slovakShort_sk?: String;
  slovenianLong_sl?: String;
  slovenianShort_sl?: String;
  spanishLong_es?: String;
  spanishShort_es?: String;
  swedishLong_sv?: String;
  swedishShort_sv?: String;
  thaiLong_th?: String;
  thaiShort_th?: String;
  turkishLong_tr?: String;
  turkishShort_tr?: String;
  ukranianLong_uk?: String;
  ukranianShort_uk?: String;
}

export interface UserUpdateInput {
  name?: String;
  email?: String;
  password?: String;
  resetToken?: String;
  resetTokenExpiry?: Float;
  permissions?: UserUpdatepermissionsInput;
}

export interface PartCreateInput {
  partNumber: String;
  arabicLong_ar_sa?: String;
  arabicShort_ar_sa?: String;
  bulgarianLong_bg?: String;
  bulgarianShort_bg?: String;
  catlanLong_ca?: String;
  catlanShort_ca?: String;
  chineseLong_zh_cn?: String;
  chineseShort_zh_cn?: String;
  chineseTLong_zh_tw?: String;
  chineseTShort_zh_tw?: String;
  croatianLong_hr?: String;
  croatianShort_hr?: String;
  czechLong_cs?: String;
  czechShort_cs?: String;
  danishLong_da?: String;
  danishShort_da?: String;
  dutchLong_nl?: String;
  dutchShort_nl?: String;
  englishLong_en?: String;
  englishShort_en?: String;
  extonianLong_et?: String;
  extonianShort_et?: String;
  finnishLong_fi?: String;
  finnishShort_fi?: String;
  frenchLong_fr?: String;
  frenchShort_fr?: String;
  germanLong_de?: String;
  germanShort_de?: String;
  greekLong_el?: String;
  greekShort_el?: String;
  hebrewLong_he?: String;
  hebrewShort_he?: String;
  hungarianLong_hu?: String;
  hungarianShort_hu?: String;
  icelandicLong_is?: String;
  icelandicShort_is?: String;
  indonesianLong_id?: String;
  indonesianShort_id?: String;
  italianLong_it?: String;
  italianShort_it?: String;
  japaneseLong_ja?: String;
  japaneseShort_ja?: String;
  koreanLong_ko?: String;
  koreanShort_ko?: String;
  latvianLong_lv?: String;
  latvianShort_lv?: String;
  lithuanianLong_lt?: String;
  lithuanianShort_lt?: String;
  malaysianLong_ms?: String;
  malaysianShort_ms?: String;
  norwegianLong_no?: String;
  norwegianShort_no?: String;
  polishLong_po?: String;
  polishShort_po?: String;
  portugeseLong_pt?: String;
  portugeseShort_pt?: String;
  romanianLong_ro?: String;
  romanianShort_ro?: String;
  russianLong_ru?: String;
  russianShort_ru?: String;
  serbianLong_sr?: String;
  serbianShort_sr?: String;
  slovakLong_sk?: String;
  slovakShort_sk?: String;
  slovenianLong_sl?: String;
  slovenianShort_sl?: String;
  spanishLong_es?: String;
  spanishShort_es?: String;
  swedishLong_sv?: String;
  swedishShort_sv?: String;
  thaiLong_th?: String;
  thaiShort_th?: String;
  turkishLong_tr?: String;
  turkishShort_tr?: String;
  ukranianLong_uk?: String;
  ukranianShort_uk?: String;
}

export interface PartWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  partNumber?: String;
  partNumber_not?: String;
  partNumber_in?: String[] | String;
  partNumber_not_in?: String[] | String;
  partNumber_lt?: String;
  partNumber_lte?: String;
  partNumber_gt?: String;
  partNumber_gte?: String;
  partNumber_contains?: String;
  partNumber_not_contains?: String;
  partNumber_starts_with?: String;
  partNumber_not_starts_with?: String;
  partNumber_ends_with?: String;
  partNumber_not_ends_with?: String;
  arabicLong_ar_sa?: String;
  arabicLong_ar_sa_not?: String;
  arabicLong_ar_sa_in?: String[] | String;
  arabicLong_ar_sa_not_in?: String[] | String;
  arabicLong_ar_sa_lt?: String;
  arabicLong_ar_sa_lte?: String;
  arabicLong_ar_sa_gt?: String;
  arabicLong_ar_sa_gte?: String;
  arabicLong_ar_sa_contains?: String;
  arabicLong_ar_sa_not_contains?: String;
  arabicLong_ar_sa_starts_with?: String;
  arabicLong_ar_sa_not_starts_with?: String;
  arabicLong_ar_sa_ends_with?: String;
  arabicLong_ar_sa_not_ends_with?: String;
  arabicShort_ar_sa?: String;
  arabicShort_ar_sa_not?: String;
  arabicShort_ar_sa_in?: String[] | String;
  arabicShort_ar_sa_not_in?: String[] | String;
  arabicShort_ar_sa_lt?: String;
  arabicShort_ar_sa_lte?: String;
  arabicShort_ar_sa_gt?: String;
  arabicShort_ar_sa_gte?: String;
  arabicShort_ar_sa_contains?: String;
  arabicShort_ar_sa_not_contains?: String;
  arabicShort_ar_sa_starts_with?: String;
  arabicShort_ar_sa_not_starts_with?: String;
  arabicShort_ar_sa_ends_with?: String;
  arabicShort_ar_sa_not_ends_with?: String;
  bulgarianLong_bg?: String;
  bulgarianLong_bg_not?: String;
  bulgarianLong_bg_in?: String[] | String;
  bulgarianLong_bg_not_in?: String[] | String;
  bulgarianLong_bg_lt?: String;
  bulgarianLong_bg_lte?: String;
  bulgarianLong_bg_gt?: String;
  bulgarianLong_bg_gte?: String;
  bulgarianLong_bg_contains?: String;
  bulgarianLong_bg_not_contains?: String;
  bulgarianLong_bg_starts_with?: String;
  bulgarianLong_bg_not_starts_with?: String;
  bulgarianLong_bg_ends_with?: String;
  bulgarianLong_bg_not_ends_with?: String;
  bulgarianShort_bg?: String;
  bulgarianShort_bg_not?: String;
  bulgarianShort_bg_in?: String[] | String;
  bulgarianShort_bg_not_in?: String[] | String;
  bulgarianShort_bg_lt?: String;
  bulgarianShort_bg_lte?: String;
  bulgarianShort_bg_gt?: String;
  bulgarianShort_bg_gte?: String;
  bulgarianShort_bg_contains?: String;
  bulgarianShort_bg_not_contains?: String;
  bulgarianShort_bg_starts_with?: String;
  bulgarianShort_bg_not_starts_with?: String;
  bulgarianShort_bg_ends_with?: String;
  bulgarianShort_bg_not_ends_with?: String;
  catlanLong_ca?: String;
  catlanLong_ca_not?: String;
  catlanLong_ca_in?: String[] | String;
  catlanLong_ca_not_in?: String[] | String;
  catlanLong_ca_lt?: String;
  catlanLong_ca_lte?: String;
  catlanLong_ca_gt?: String;
  catlanLong_ca_gte?: String;
  catlanLong_ca_contains?: String;
  catlanLong_ca_not_contains?: String;
  catlanLong_ca_starts_with?: String;
  catlanLong_ca_not_starts_with?: String;
  catlanLong_ca_ends_with?: String;
  catlanLong_ca_not_ends_with?: String;
  catlanShort_ca?: String;
  catlanShort_ca_not?: String;
  catlanShort_ca_in?: String[] | String;
  catlanShort_ca_not_in?: String[] | String;
  catlanShort_ca_lt?: String;
  catlanShort_ca_lte?: String;
  catlanShort_ca_gt?: String;
  catlanShort_ca_gte?: String;
  catlanShort_ca_contains?: String;
  catlanShort_ca_not_contains?: String;
  catlanShort_ca_starts_with?: String;
  catlanShort_ca_not_starts_with?: String;
  catlanShort_ca_ends_with?: String;
  catlanShort_ca_not_ends_with?: String;
  chineseLong_zh_cn?: String;
  chineseLong_zh_cn_not?: String;
  chineseLong_zh_cn_in?: String[] | String;
  chineseLong_zh_cn_not_in?: String[] | String;
  chineseLong_zh_cn_lt?: String;
  chineseLong_zh_cn_lte?: String;
  chineseLong_zh_cn_gt?: String;
  chineseLong_zh_cn_gte?: String;
  chineseLong_zh_cn_contains?: String;
  chineseLong_zh_cn_not_contains?: String;
  chineseLong_zh_cn_starts_with?: String;
  chineseLong_zh_cn_not_starts_with?: String;
  chineseLong_zh_cn_ends_with?: String;
  chineseLong_zh_cn_not_ends_with?: String;
  chineseShort_zh_cn?: String;
  chineseShort_zh_cn_not?: String;
  chineseShort_zh_cn_in?: String[] | String;
  chineseShort_zh_cn_not_in?: String[] | String;
  chineseShort_zh_cn_lt?: String;
  chineseShort_zh_cn_lte?: String;
  chineseShort_zh_cn_gt?: String;
  chineseShort_zh_cn_gte?: String;
  chineseShort_zh_cn_contains?: String;
  chineseShort_zh_cn_not_contains?: String;
  chineseShort_zh_cn_starts_with?: String;
  chineseShort_zh_cn_not_starts_with?: String;
  chineseShort_zh_cn_ends_with?: String;
  chineseShort_zh_cn_not_ends_with?: String;
  chineseTLong_zh_tw?: String;
  chineseTLong_zh_tw_not?: String;
  chineseTLong_zh_tw_in?: String[] | String;
  chineseTLong_zh_tw_not_in?: String[] | String;
  chineseTLong_zh_tw_lt?: String;
  chineseTLong_zh_tw_lte?: String;
  chineseTLong_zh_tw_gt?: String;
  chineseTLong_zh_tw_gte?: String;
  chineseTLong_zh_tw_contains?: String;
  chineseTLong_zh_tw_not_contains?: String;
  chineseTLong_zh_tw_starts_with?: String;
  chineseTLong_zh_tw_not_starts_with?: String;
  chineseTLong_zh_tw_ends_with?: String;
  chineseTLong_zh_tw_not_ends_with?: String;
  chineseTShort_zh_tw?: String;
  chineseTShort_zh_tw_not?: String;
  chineseTShort_zh_tw_in?: String[] | String;
  chineseTShort_zh_tw_not_in?: String[] | String;
  chineseTShort_zh_tw_lt?: String;
  chineseTShort_zh_tw_lte?: String;
  chineseTShort_zh_tw_gt?: String;
  chineseTShort_zh_tw_gte?: String;
  chineseTShort_zh_tw_contains?: String;
  chineseTShort_zh_tw_not_contains?: String;
  chineseTShort_zh_tw_starts_with?: String;
  chineseTShort_zh_tw_not_starts_with?: String;
  chineseTShort_zh_tw_ends_with?: String;
  chineseTShort_zh_tw_not_ends_with?: String;
  croatianLong_hr?: String;
  croatianLong_hr_not?: String;
  croatianLong_hr_in?: String[] | String;
  croatianLong_hr_not_in?: String[] | String;
  croatianLong_hr_lt?: String;
  croatianLong_hr_lte?: String;
  croatianLong_hr_gt?: String;
  croatianLong_hr_gte?: String;
  croatianLong_hr_contains?: String;
  croatianLong_hr_not_contains?: String;
  croatianLong_hr_starts_with?: String;
  croatianLong_hr_not_starts_with?: String;
  croatianLong_hr_ends_with?: String;
  croatianLong_hr_not_ends_with?: String;
  croatianShort_hr?: String;
  croatianShort_hr_not?: String;
  croatianShort_hr_in?: String[] | String;
  croatianShort_hr_not_in?: String[] | String;
  croatianShort_hr_lt?: String;
  croatianShort_hr_lte?: String;
  croatianShort_hr_gt?: String;
  croatianShort_hr_gte?: String;
  croatianShort_hr_contains?: String;
  croatianShort_hr_not_contains?: String;
  croatianShort_hr_starts_with?: String;
  croatianShort_hr_not_starts_with?: String;
  croatianShort_hr_ends_with?: String;
  croatianShort_hr_not_ends_with?: String;
  czechLong_cs?: String;
  czechLong_cs_not?: String;
  czechLong_cs_in?: String[] | String;
  czechLong_cs_not_in?: String[] | String;
  czechLong_cs_lt?: String;
  czechLong_cs_lte?: String;
  czechLong_cs_gt?: String;
  czechLong_cs_gte?: String;
  czechLong_cs_contains?: String;
  czechLong_cs_not_contains?: String;
  czechLong_cs_starts_with?: String;
  czechLong_cs_not_starts_with?: String;
  czechLong_cs_ends_with?: String;
  czechLong_cs_not_ends_with?: String;
  czechShort_cs?: String;
  czechShort_cs_not?: String;
  czechShort_cs_in?: String[] | String;
  czechShort_cs_not_in?: String[] | String;
  czechShort_cs_lt?: String;
  czechShort_cs_lte?: String;
  czechShort_cs_gt?: String;
  czechShort_cs_gte?: String;
  czechShort_cs_contains?: String;
  czechShort_cs_not_contains?: String;
  czechShort_cs_starts_with?: String;
  czechShort_cs_not_starts_with?: String;
  czechShort_cs_ends_with?: String;
  czechShort_cs_not_ends_with?: String;
  danishLong_da?: String;
  danishLong_da_not?: String;
  danishLong_da_in?: String[] | String;
  danishLong_da_not_in?: String[] | String;
  danishLong_da_lt?: String;
  danishLong_da_lte?: String;
  danishLong_da_gt?: String;
  danishLong_da_gte?: String;
  danishLong_da_contains?: String;
  danishLong_da_not_contains?: String;
  danishLong_da_starts_with?: String;
  danishLong_da_not_starts_with?: String;
  danishLong_da_ends_with?: String;
  danishLong_da_not_ends_with?: String;
  danishShort_da?: String;
  danishShort_da_not?: String;
  danishShort_da_in?: String[] | String;
  danishShort_da_not_in?: String[] | String;
  danishShort_da_lt?: String;
  danishShort_da_lte?: String;
  danishShort_da_gt?: String;
  danishShort_da_gte?: String;
  danishShort_da_contains?: String;
  danishShort_da_not_contains?: String;
  danishShort_da_starts_with?: String;
  danishShort_da_not_starts_with?: String;
  danishShort_da_ends_with?: String;
  danishShort_da_not_ends_with?: String;
  dutchLong_nl?: String;
  dutchLong_nl_not?: String;
  dutchLong_nl_in?: String[] | String;
  dutchLong_nl_not_in?: String[] | String;
  dutchLong_nl_lt?: String;
  dutchLong_nl_lte?: String;
  dutchLong_nl_gt?: String;
  dutchLong_nl_gte?: String;
  dutchLong_nl_contains?: String;
  dutchLong_nl_not_contains?: String;
  dutchLong_nl_starts_with?: String;
  dutchLong_nl_not_starts_with?: String;
  dutchLong_nl_ends_with?: String;
  dutchLong_nl_not_ends_with?: String;
  dutchShort_nl?: String;
  dutchShort_nl_not?: String;
  dutchShort_nl_in?: String[] | String;
  dutchShort_nl_not_in?: String[] | String;
  dutchShort_nl_lt?: String;
  dutchShort_nl_lte?: String;
  dutchShort_nl_gt?: String;
  dutchShort_nl_gte?: String;
  dutchShort_nl_contains?: String;
  dutchShort_nl_not_contains?: String;
  dutchShort_nl_starts_with?: String;
  dutchShort_nl_not_starts_with?: String;
  dutchShort_nl_ends_with?: String;
  dutchShort_nl_not_ends_with?: String;
  englishLong_en?: String;
  englishLong_en_not?: String;
  englishLong_en_in?: String[] | String;
  englishLong_en_not_in?: String[] | String;
  englishLong_en_lt?: String;
  englishLong_en_lte?: String;
  englishLong_en_gt?: String;
  englishLong_en_gte?: String;
  englishLong_en_contains?: String;
  englishLong_en_not_contains?: String;
  englishLong_en_starts_with?: String;
  englishLong_en_not_starts_with?: String;
  englishLong_en_ends_with?: String;
  englishLong_en_not_ends_with?: String;
  englishShort_en?: String;
  englishShort_en_not?: String;
  englishShort_en_in?: String[] | String;
  englishShort_en_not_in?: String[] | String;
  englishShort_en_lt?: String;
  englishShort_en_lte?: String;
  englishShort_en_gt?: String;
  englishShort_en_gte?: String;
  englishShort_en_contains?: String;
  englishShort_en_not_contains?: String;
  englishShort_en_starts_with?: String;
  englishShort_en_not_starts_with?: String;
  englishShort_en_ends_with?: String;
  englishShort_en_not_ends_with?: String;
  extonianLong_et?: String;
  extonianLong_et_not?: String;
  extonianLong_et_in?: String[] | String;
  extonianLong_et_not_in?: String[] | String;
  extonianLong_et_lt?: String;
  extonianLong_et_lte?: String;
  extonianLong_et_gt?: String;
  extonianLong_et_gte?: String;
  extonianLong_et_contains?: String;
  extonianLong_et_not_contains?: String;
  extonianLong_et_starts_with?: String;
  extonianLong_et_not_starts_with?: String;
  extonianLong_et_ends_with?: String;
  extonianLong_et_not_ends_with?: String;
  extonianShort_et?: String;
  extonianShort_et_not?: String;
  extonianShort_et_in?: String[] | String;
  extonianShort_et_not_in?: String[] | String;
  extonianShort_et_lt?: String;
  extonianShort_et_lte?: String;
  extonianShort_et_gt?: String;
  extonianShort_et_gte?: String;
  extonianShort_et_contains?: String;
  extonianShort_et_not_contains?: String;
  extonianShort_et_starts_with?: String;
  extonianShort_et_not_starts_with?: String;
  extonianShort_et_ends_with?: String;
  extonianShort_et_not_ends_with?: String;
  finnishLong_fi?: String;
  finnishLong_fi_not?: String;
  finnishLong_fi_in?: String[] | String;
  finnishLong_fi_not_in?: String[] | String;
  finnishLong_fi_lt?: String;
  finnishLong_fi_lte?: String;
  finnishLong_fi_gt?: String;
  finnishLong_fi_gte?: String;
  finnishLong_fi_contains?: String;
  finnishLong_fi_not_contains?: String;
  finnishLong_fi_starts_with?: String;
  finnishLong_fi_not_starts_with?: String;
  finnishLong_fi_ends_with?: String;
  finnishLong_fi_not_ends_with?: String;
  finnishShort_fi?: String;
  finnishShort_fi_not?: String;
  finnishShort_fi_in?: String[] | String;
  finnishShort_fi_not_in?: String[] | String;
  finnishShort_fi_lt?: String;
  finnishShort_fi_lte?: String;
  finnishShort_fi_gt?: String;
  finnishShort_fi_gte?: String;
  finnishShort_fi_contains?: String;
  finnishShort_fi_not_contains?: String;
  finnishShort_fi_starts_with?: String;
  finnishShort_fi_not_starts_with?: String;
  finnishShort_fi_ends_with?: String;
  finnishShort_fi_not_ends_with?: String;
  frenchLong_fr?: String;
  frenchLong_fr_not?: String;
  frenchLong_fr_in?: String[] | String;
  frenchLong_fr_not_in?: String[] | String;
  frenchLong_fr_lt?: String;
  frenchLong_fr_lte?: String;
  frenchLong_fr_gt?: String;
  frenchLong_fr_gte?: String;
  frenchLong_fr_contains?: String;
  frenchLong_fr_not_contains?: String;
  frenchLong_fr_starts_with?: String;
  frenchLong_fr_not_starts_with?: String;
  frenchLong_fr_ends_with?: String;
  frenchLong_fr_not_ends_with?: String;
  frenchShort_fr?: String;
  frenchShort_fr_not?: String;
  frenchShort_fr_in?: String[] | String;
  frenchShort_fr_not_in?: String[] | String;
  frenchShort_fr_lt?: String;
  frenchShort_fr_lte?: String;
  frenchShort_fr_gt?: String;
  frenchShort_fr_gte?: String;
  frenchShort_fr_contains?: String;
  frenchShort_fr_not_contains?: String;
  frenchShort_fr_starts_with?: String;
  frenchShort_fr_not_starts_with?: String;
  frenchShort_fr_ends_with?: String;
  frenchShort_fr_not_ends_with?: String;
  germanLong_de?: String;
  germanLong_de_not?: String;
  germanLong_de_in?: String[] | String;
  germanLong_de_not_in?: String[] | String;
  germanLong_de_lt?: String;
  germanLong_de_lte?: String;
  germanLong_de_gt?: String;
  germanLong_de_gte?: String;
  germanLong_de_contains?: String;
  germanLong_de_not_contains?: String;
  germanLong_de_starts_with?: String;
  germanLong_de_not_starts_with?: String;
  germanLong_de_ends_with?: String;
  germanLong_de_not_ends_with?: String;
  germanShort_de?: String;
  germanShort_de_not?: String;
  germanShort_de_in?: String[] | String;
  germanShort_de_not_in?: String[] | String;
  germanShort_de_lt?: String;
  germanShort_de_lte?: String;
  germanShort_de_gt?: String;
  germanShort_de_gte?: String;
  germanShort_de_contains?: String;
  germanShort_de_not_contains?: String;
  germanShort_de_starts_with?: String;
  germanShort_de_not_starts_with?: String;
  germanShort_de_ends_with?: String;
  germanShort_de_not_ends_with?: String;
  greekLong_el?: String;
  greekLong_el_not?: String;
  greekLong_el_in?: String[] | String;
  greekLong_el_not_in?: String[] | String;
  greekLong_el_lt?: String;
  greekLong_el_lte?: String;
  greekLong_el_gt?: String;
  greekLong_el_gte?: String;
  greekLong_el_contains?: String;
  greekLong_el_not_contains?: String;
  greekLong_el_starts_with?: String;
  greekLong_el_not_starts_with?: String;
  greekLong_el_ends_with?: String;
  greekLong_el_not_ends_with?: String;
  greekShort_el?: String;
  greekShort_el_not?: String;
  greekShort_el_in?: String[] | String;
  greekShort_el_not_in?: String[] | String;
  greekShort_el_lt?: String;
  greekShort_el_lte?: String;
  greekShort_el_gt?: String;
  greekShort_el_gte?: String;
  greekShort_el_contains?: String;
  greekShort_el_not_contains?: String;
  greekShort_el_starts_with?: String;
  greekShort_el_not_starts_with?: String;
  greekShort_el_ends_with?: String;
  greekShort_el_not_ends_with?: String;
  hebrewLong_he?: String;
  hebrewLong_he_not?: String;
  hebrewLong_he_in?: String[] | String;
  hebrewLong_he_not_in?: String[] | String;
  hebrewLong_he_lt?: String;
  hebrewLong_he_lte?: String;
  hebrewLong_he_gt?: String;
  hebrewLong_he_gte?: String;
  hebrewLong_he_contains?: String;
  hebrewLong_he_not_contains?: String;
  hebrewLong_he_starts_with?: String;
  hebrewLong_he_not_starts_with?: String;
  hebrewLong_he_ends_with?: String;
  hebrewLong_he_not_ends_with?: String;
  hebrewShort_he?: String;
  hebrewShort_he_not?: String;
  hebrewShort_he_in?: String[] | String;
  hebrewShort_he_not_in?: String[] | String;
  hebrewShort_he_lt?: String;
  hebrewShort_he_lte?: String;
  hebrewShort_he_gt?: String;
  hebrewShort_he_gte?: String;
  hebrewShort_he_contains?: String;
  hebrewShort_he_not_contains?: String;
  hebrewShort_he_starts_with?: String;
  hebrewShort_he_not_starts_with?: String;
  hebrewShort_he_ends_with?: String;
  hebrewShort_he_not_ends_with?: String;
  hungarianLong_hu?: String;
  hungarianLong_hu_not?: String;
  hungarianLong_hu_in?: String[] | String;
  hungarianLong_hu_not_in?: String[] | String;
  hungarianLong_hu_lt?: String;
  hungarianLong_hu_lte?: String;
  hungarianLong_hu_gt?: String;
  hungarianLong_hu_gte?: String;
  hungarianLong_hu_contains?: String;
  hungarianLong_hu_not_contains?: String;
  hungarianLong_hu_starts_with?: String;
  hungarianLong_hu_not_starts_with?: String;
  hungarianLong_hu_ends_with?: String;
  hungarianLong_hu_not_ends_with?: String;
  hungarianShort_hu?: String;
  hungarianShort_hu_not?: String;
  hungarianShort_hu_in?: String[] | String;
  hungarianShort_hu_not_in?: String[] | String;
  hungarianShort_hu_lt?: String;
  hungarianShort_hu_lte?: String;
  hungarianShort_hu_gt?: String;
  hungarianShort_hu_gte?: String;
  hungarianShort_hu_contains?: String;
  hungarianShort_hu_not_contains?: String;
  hungarianShort_hu_starts_with?: String;
  hungarianShort_hu_not_starts_with?: String;
  hungarianShort_hu_ends_with?: String;
  hungarianShort_hu_not_ends_with?: String;
  icelandicLong_is?: String;
  icelandicLong_is_not?: String;
  icelandicLong_is_in?: String[] | String;
  icelandicLong_is_not_in?: String[] | String;
  icelandicLong_is_lt?: String;
  icelandicLong_is_lte?: String;
  icelandicLong_is_gt?: String;
  icelandicLong_is_gte?: String;
  icelandicLong_is_contains?: String;
  icelandicLong_is_not_contains?: String;
  icelandicLong_is_starts_with?: String;
  icelandicLong_is_not_starts_with?: String;
  icelandicLong_is_ends_with?: String;
  icelandicLong_is_not_ends_with?: String;
  icelandicShort_is?: String;
  icelandicShort_is_not?: String;
  icelandicShort_is_in?: String[] | String;
  icelandicShort_is_not_in?: String[] | String;
  icelandicShort_is_lt?: String;
  icelandicShort_is_lte?: String;
  icelandicShort_is_gt?: String;
  icelandicShort_is_gte?: String;
  icelandicShort_is_contains?: String;
  icelandicShort_is_not_contains?: String;
  icelandicShort_is_starts_with?: String;
  icelandicShort_is_not_starts_with?: String;
  icelandicShort_is_ends_with?: String;
  icelandicShort_is_not_ends_with?: String;
  indonesianLong_id?: String;
  indonesianLong_id_not?: String;
  indonesianLong_id_in?: String[] | String;
  indonesianLong_id_not_in?: String[] | String;
  indonesianLong_id_lt?: String;
  indonesianLong_id_lte?: String;
  indonesianLong_id_gt?: String;
  indonesianLong_id_gte?: String;
  indonesianLong_id_contains?: String;
  indonesianLong_id_not_contains?: String;
  indonesianLong_id_starts_with?: String;
  indonesianLong_id_not_starts_with?: String;
  indonesianLong_id_ends_with?: String;
  indonesianLong_id_not_ends_with?: String;
  indonesianShort_id?: String;
  indonesianShort_id_not?: String;
  indonesianShort_id_in?: String[] | String;
  indonesianShort_id_not_in?: String[] | String;
  indonesianShort_id_lt?: String;
  indonesianShort_id_lte?: String;
  indonesianShort_id_gt?: String;
  indonesianShort_id_gte?: String;
  indonesianShort_id_contains?: String;
  indonesianShort_id_not_contains?: String;
  indonesianShort_id_starts_with?: String;
  indonesianShort_id_not_starts_with?: String;
  indonesianShort_id_ends_with?: String;
  indonesianShort_id_not_ends_with?: String;
  italianLong_it?: String;
  italianLong_it_not?: String;
  italianLong_it_in?: String[] | String;
  italianLong_it_not_in?: String[] | String;
  italianLong_it_lt?: String;
  italianLong_it_lte?: String;
  italianLong_it_gt?: String;
  italianLong_it_gte?: String;
  italianLong_it_contains?: String;
  italianLong_it_not_contains?: String;
  italianLong_it_starts_with?: String;
  italianLong_it_not_starts_with?: String;
  italianLong_it_ends_with?: String;
  italianLong_it_not_ends_with?: String;
  italianShort_it?: String;
  italianShort_it_not?: String;
  italianShort_it_in?: String[] | String;
  italianShort_it_not_in?: String[] | String;
  italianShort_it_lt?: String;
  italianShort_it_lte?: String;
  italianShort_it_gt?: String;
  italianShort_it_gte?: String;
  italianShort_it_contains?: String;
  italianShort_it_not_contains?: String;
  italianShort_it_starts_with?: String;
  italianShort_it_not_starts_with?: String;
  italianShort_it_ends_with?: String;
  italianShort_it_not_ends_with?: String;
  japaneseLong_ja?: String;
  japaneseLong_ja_not?: String;
  japaneseLong_ja_in?: String[] | String;
  japaneseLong_ja_not_in?: String[] | String;
  japaneseLong_ja_lt?: String;
  japaneseLong_ja_lte?: String;
  japaneseLong_ja_gt?: String;
  japaneseLong_ja_gte?: String;
  japaneseLong_ja_contains?: String;
  japaneseLong_ja_not_contains?: String;
  japaneseLong_ja_starts_with?: String;
  japaneseLong_ja_not_starts_with?: String;
  japaneseLong_ja_ends_with?: String;
  japaneseLong_ja_not_ends_with?: String;
  japaneseShort_ja?: String;
  japaneseShort_ja_not?: String;
  japaneseShort_ja_in?: String[] | String;
  japaneseShort_ja_not_in?: String[] | String;
  japaneseShort_ja_lt?: String;
  japaneseShort_ja_lte?: String;
  japaneseShort_ja_gt?: String;
  japaneseShort_ja_gte?: String;
  japaneseShort_ja_contains?: String;
  japaneseShort_ja_not_contains?: String;
  japaneseShort_ja_starts_with?: String;
  japaneseShort_ja_not_starts_with?: String;
  japaneseShort_ja_ends_with?: String;
  japaneseShort_ja_not_ends_with?: String;
  koreanLong_ko?: String;
  koreanLong_ko_not?: String;
  koreanLong_ko_in?: String[] | String;
  koreanLong_ko_not_in?: String[] | String;
  koreanLong_ko_lt?: String;
  koreanLong_ko_lte?: String;
  koreanLong_ko_gt?: String;
  koreanLong_ko_gte?: String;
  koreanLong_ko_contains?: String;
  koreanLong_ko_not_contains?: String;
  koreanLong_ko_starts_with?: String;
  koreanLong_ko_not_starts_with?: String;
  koreanLong_ko_ends_with?: String;
  koreanLong_ko_not_ends_with?: String;
  koreanShort_ko?: String;
  koreanShort_ko_not?: String;
  koreanShort_ko_in?: String[] | String;
  koreanShort_ko_not_in?: String[] | String;
  koreanShort_ko_lt?: String;
  koreanShort_ko_lte?: String;
  koreanShort_ko_gt?: String;
  koreanShort_ko_gte?: String;
  koreanShort_ko_contains?: String;
  koreanShort_ko_not_contains?: String;
  koreanShort_ko_starts_with?: String;
  koreanShort_ko_not_starts_with?: String;
  koreanShort_ko_ends_with?: String;
  koreanShort_ko_not_ends_with?: String;
  latvianLong_lv?: String;
  latvianLong_lv_not?: String;
  latvianLong_lv_in?: String[] | String;
  latvianLong_lv_not_in?: String[] | String;
  latvianLong_lv_lt?: String;
  latvianLong_lv_lte?: String;
  latvianLong_lv_gt?: String;
  latvianLong_lv_gte?: String;
  latvianLong_lv_contains?: String;
  latvianLong_lv_not_contains?: String;
  latvianLong_lv_starts_with?: String;
  latvianLong_lv_not_starts_with?: String;
  latvianLong_lv_ends_with?: String;
  latvianLong_lv_not_ends_with?: String;
  latvianShort_lv?: String;
  latvianShort_lv_not?: String;
  latvianShort_lv_in?: String[] | String;
  latvianShort_lv_not_in?: String[] | String;
  latvianShort_lv_lt?: String;
  latvianShort_lv_lte?: String;
  latvianShort_lv_gt?: String;
  latvianShort_lv_gte?: String;
  latvianShort_lv_contains?: String;
  latvianShort_lv_not_contains?: String;
  latvianShort_lv_starts_with?: String;
  latvianShort_lv_not_starts_with?: String;
  latvianShort_lv_ends_with?: String;
  latvianShort_lv_not_ends_with?: String;
  lithuanianLong_lt?: String;
  lithuanianLong_lt_not?: String;
  lithuanianLong_lt_in?: String[] | String;
  lithuanianLong_lt_not_in?: String[] | String;
  lithuanianLong_lt_lt?: String;
  lithuanianLong_lt_lte?: String;
  lithuanianLong_lt_gt?: String;
  lithuanianLong_lt_gte?: String;
  lithuanianLong_lt_contains?: String;
  lithuanianLong_lt_not_contains?: String;
  lithuanianLong_lt_starts_with?: String;
  lithuanianLong_lt_not_starts_with?: String;
  lithuanianLong_lt_ends_with?: String;
  lithuanianLong_lt_not_ends_with?: String;
  lithuanianShort_lt?: String;
  lithuanianShort_lt_not?: String;
  lithuanianShort_lt_in?: String[] | String;
  lithuanianShort_lt_not_in?: String[] | String;
  lithuanianShort_lt_lt?: String;
  lithuanianShort_lt_lte?: String;
  lithuanianShort_lt_gt?: String;
  lithuanianShort_lt_gte?: String;
  lithuanianShort_lt_contains?: String;
  lithuanianShort_lt_not_contains?: String;
  lithuanianShort_lt_starts_with?: String;
  lithuanianShort_lt_not_starts_with?: String;
  lithuanianShort_lt_ends_with?: String;
  lithuanianShort_lt_not_ends_with?: String;
  malaysianLong_ms?: String;
  malaysianLong_ms_not?: String;
  malaysianLong_ms_in?: String[] | String;
  malaysianLong_ms_not_in?: String[] | String;
  malaysianLong_ms_lt?: String;
  malaysianLong_ms_lte?: String;
  malaysianLong_ms_gt?: String;
  malaysianLong_ms_gte?: String;
  malaysianLong_ms_contains?: String;
  malaysianLong_ms_not_contains?: String;
  malaysianLong_ms_starts_with?: String;
  malaysianLong_ms_not_starts_with?: String;
  malaysianLong_ms_ends_with?: String;
  malaysianLong_ms_not_ends_with?: String;
  malaysianShort_ms?: String;
  malaysianShort_ms_not?: String;
  malaysianShort_ms_in?: String[] | String;
  malaysianShort_ms_not_in?: String[] | String;
  malaysianShort_ms_lt?: String;
  malaysianShort_ms_lte?: String;
  malaysianShort_ms_gt?: String;
  malaysianShort_ms_gte?: String;
  malaysianShort_ms_contains?: String;
  malaysianShort_ms_not_contains?: String;
  malaysianShort_ms_starts_with?: String;
  malaysianShort_ms_not_starts_with?: String;
  malaysianShort_ms_ends_with?: String;
  malaysianShort_ms_not_ends_with?: String;
  norwegianLong_no?: String;
  norwegianLong_no_not?: String;
  norwegianLong_no_in?: String[] | String;
  norwegianLong_no_not_in?: String[] | String;
  norwegianLong_no_lt?: String;
  norwegianLong_no_lte?: String;
  norwegianLong_no_gt?: String;
  norwegianLong_no_gte?: String;
  norwegianLong_no_contains?: String;
  norwegianLong_no_not_contains?: String;
  norwegianLong_no_starts_with?: String;
  norwegianLong_no_not_starts_with?: String;
  norwegianLong_no_ends_with?: String;
  norwegianLong_no_not_ends_with?: String;
  norwegianShort_no?: String;
  norwegianShort_no_not?: String;
  norwegianShort_no_in?: String[] | String;
  norwegianShort_no_not_in?: String[] | String;
  norwegianShort_no_lt?: String;
  norwegianShort_no_lte?: String;
  norwegianShort_no_gt?: String;
  norwegianShort_no_gte?: String;
  norwegianShort_no_contains?: String;
  norwegianShort_no_not_contains?: String;
  norwegianShort_no_starts_with?: String;
  norwegianShort_no_not_starts_with?: String;
  norwegianShort_no_ends_with?: String;
  norwegianShort_no_not_ends_with?: String;
  polishLong_po?: String;
  polishLong_po_not?: String;
  polishLong_po_in?: String[] | String;
  polishLong_po_not_in?: String[] | String;
  polishLong_po_lt?: String;
  polishLong_po_lte?: String;
  polishLong_po_gt?: String;
  polishLong_po_gte?: String;
  polishLong_po_contains?: String;
  polishLong_po_not_contains?: String;
  polishLong_po_starts_with?: String;
  polishLong_po_not_starts_with?: String;
  polishLong_po_ends_with?: String;
  polishLong_po_not_ends_with?: String;
  polishShort_po?: String;
  polishShort_po_not?: String;
  polishShort_po_in?: String[] | String;
  polishShort_po_not_in?: String[] | String;
  polishShort_po_lt?: String;
  polishShort_po_lte?: String;
  polishShort_po_gt?: String;
  polishShort_po_gte?: String;
  polishShort_po_contains?: String;
  polishShort_po_not_contains?: String;
  polishShort_po_starts_with?: String;
  polishShort_po_not_starts_with?: String;
  polishShort_po_ends_with?: String;
  polishShort_po_not_ends_with?: String;
  portugeseLong_pt?: String;
  portugeseLong_pt_not?: String;
  portugeseLong_pt_in?: String[] | String;
  portugeseLong_pt_not_in?: String[] | String;
  portugeseLong_pt_lt?: String;
  portugeseLong_pt_lte?: String;
  portugeseLong_pt_gt?: String;
  portugeseLong_pt_gte?: String;
  portugeseLong_pt_contains?: String;
  portugeseLong_pt_not_contains?: String;
  portugeseLong_pt_starts_with?: String;
  portugeseLong_pt_not_starts_with?: String;
  portugeseLong_pt_ends_with?: String;
  portugeseLong_pt_not_ends_with?: String;
  portugeseShort_pt?: String;
  portugeseShort_pt_not?: String;
  portugeseShort_pt_in?: String[] | String;
  portugeseShort_pt_not_in?: String[] | String;
  portugeseShort_pt_lt?: String;
  portugeseShort_pt_lte?: String;
  portugeseShort_pt_gt?: String;
  portugeseShort_pt_gte?: String;
  portugeseShort_pt_contains?: String;
  portugeseShort_pt_not_contains?: String;
  portugeseShort_pt_starts_with?: String;
  portugeseShort_pt_not_starts_with?: String;
  portugeseShort_pt_ends_with?: String;
  portugeseShort_pt_not_ends_with?: String;
  romanianLong_ro?: String;
  romanianLong_ro_not?: String;
  romanianLong_ro_in?: String[] | String;
  romanianLong_ro_not_in?: String[] | String;
  romanianLong_ro_lt?: String;
  romanianLong_ro_lte?: String;
  romanianLong_ro_gt?: String;
  romanianLong_ro_gte?: String;
  romanianLong_ro_contains?: String;
  romanianLong_ro_not_contains?: String;
  romanianLong_ro_starts_with?: String;
  romanianLong_ro_not_starts_with?: String;
  romanianLong_ro_ends_with?: String;
  romanianLong_ro_not_ends_with?: String;
  romanianShort_ro?: String;
  romanianShort_ro_not?: String;
  romanianShort_ro_in?: String[] | String;
  romanianShort_ro_not_in?: String[] | String;
  romanianShort_ro_lt?: String;
  romanianShort_ro_lte?: String;
  romanianShort_ro_gt?: String;
  romanianShort_ro_gte?: String;
  romanianShort_ro_contains?: String;
  romanianShort_ro_not_contains?: String;
  romanianShort_ro_starts_with?: String;
  romanianShort_ro_not_starts_with?: String;
  romanianShort_ro_ends_with?: String;
  romanianShort_ro_not_ends_with?: String;
  russianLong_ru?: String;
  russianLong_ru_not?: String;
  russianLong_ru_in?: String[] | String;
  russianLong_ru_not_in?: String[] | String;
  russianLong_ru_lt?: String;
  russianLong_ru_lte?: String;
  russianLong_ru_gt?: String;
  russianLong_ru_gte?: String;
  russianLong_ru_contains?: String;
  russianLong_ru_not_contains?: String;
  russianLong_ru_starts_with?: String;
  russianLong_ru_not_starts_with?: String;
  russianLong_ru_ends_with?: String;
  russianLong_ru_not_ends_with?: String;
  russianShort_ru?: String;
  russianShort_ru_not?: String;
  russianShort_ru_in?: String[] | String;
  russianShort_ru_not_in?: String[] | String;
  russianShort_ru_lt?: String;
  russianShort_ru_lte?: String;
  russianShort_ru_gt?: String;
  russianShort_ru_gte?: String;
  russianShort_ru_contains?: String;
  russianShort_ru_not_contains?: String;
  russianShort_ru_starts_with?: String;
  russianShort_ru_not_starts_with?: String;
  russianShort_ru_ends_with?: String;
  russianShort_ru_not_ends_with?: String;
  serbianLong_sr?: String;
  serbianLong_sr_not?: String;
  serbianLong_sr_in?: String[] | String;
  serbianLong_sr_not_in?: String[] | String;
  serbianLong_sr_lt?: String;
  serbianLong_sr_lte?: String;
  serbianLong_sr_gt?: String;
  serbianLong_sr_gte?: String;
  serbianLong_sr_contains?: String;
  serbianLong_sr_not_contains?: String;
  serbianLong_sr_starts_with?: String;
  serbianLong_sr_not_starts_with?: String;
  serbianLong_sr_ends_with?: String;
  serbianLong_sr_not_ends_with?: String;
  serbianShort_sr?: String;
  serbianShort_sr_not?: String;
  serbianShort_sr_in?: String[] | String;
  serbianShort_sr_not_in?: String[] | String;
  serbianShort_sr_lt?: String;
  serbianShort_sr_lte?: String;
  serbianShort_sr_gt?: String;
  serbianShort_sr_gte?: String;
  serbianShort_sr_contains?: String;
  serbianShort_sr_not_contains?: String;
  serbianShort_sr_starts_with?: String;
  serbianShort_sr_not_starts_with?: String;
  serbianShort_sr_ends_with?: String;
  serbianShort_sr_not_ends_with?: String;
  slovakLong_sk?: String;
  slovakLong_sk_not?: String;
  slovakLong_sk_in?: String[] | String;
  slovakLong_sk_not_in?: String[] | String;
  slovakLong_sk_lt?: String;
  slovakLong_sk_lte?: String;
  slovakLong_sk_gt?: String;
  slovakLong_sk_gte?: String;
  slovakLong_sk_contains?: String;
  slovakLong_sk_not_contains?: String;
  slovakLong_sk_starts_with?: String;
  slovakLong_sk_not_starts_with?: String;
  slovakLong_sk_ends_with?: String;
  slovakLong_sk_not_ends_with?: String;
  slovakShort_sk?: String;
  slovakShort_sk_not?: String;
  slovakShort_sk_in?: String[] | String;
  slovakShort_sk_not_in?: String[] | String;
  slovakShort_sk_lt?: String;
  slovakShort_sk_lte?: String;
  slovakShort_sk_gt?: String;
  slovakShort_sk_gte?: String;
  slovakShort_sk_contains?: String;
  slovakShort_sk_not_contains?: String;
  slovakShort_sk_starts_with?: String;
  slovakShort_sk_not_starts_with?: String;
  slovakShort_sk_ends_with?: String;
  slovakShort_sk_not_ends_with?: String;
  slovenianLong_sl?: String;
  slovenianLong_sl_not?: String;
  slovenianLong_sl_in?: String[] | String;
  slovenianLong_sl_not_in?: String[] | String;
  slovenianLong_sl_lt?: String;
  slovenianLong_sl_lte?: String;
  slovenianLong_sl_gt?: String;
  slovenianLong_sl_gte?: String;
  slovenianLong_sl_contains?: String;
  slovenianLong_sl_not_contains?: String;
  slovenianLong_sl_starts_with?: String;
  slovenianLong_sl_not_starts_with?: String;
  slovenianLong_sl_ends_with?: String;
  slovenianLong_sl_not_ends_with?: String;
  slovenianShort_sl?: String;
  slovenianShort_sl_not?: String;
  slovenianShort_sl_in?: String[] | String;
  slovenianShort_sl_not_in?: String[] | String;
  slovenianShort_sl_lt?: String;
  slovenianShort_sl_lte?: String;
  slovenianShort_sl_gt?: String;
  slovenianShort_sl_gte?: String;
  slovenianShort_sl_contains?: String;
  slovenianShort_sl_not_contains?: String;
  slovenianShort_sl_starts_with?: String;
  slovenianShort_sl_not_starts_with?: String;
  slovenianShort_sl_ends_with?: String;
  slovenianShort_sl_not_ends_with?: String;
  spanishLong_es?: String;
  spanishLong_es_not?: String;
  spanishLong_es_in?: String[] | String;
  spanishLong_es_not_in?: String[] | String;
  spanishLong_es_lt?: String;
  spanishLong_es_lte?: String;
  spanishLong_es_gt?: String;
  spanishLong_es_gte?: String;
  spanishLong_es_contains?: String;
  spanishLong_es_not_contains?: String;
  spanishLong_es_starts_with?: String;
  spanishLong_es_not_starts_with?: String;
  spanishLong_es_ends_with?: String;
  spanishLong_es_not_ends_with?: String;
  spanishShort_es?: String;
  spanishShort_es_not?: String;
  spanishShort_es_in?: String[] | String;
  spanishShort_es_not_in?: String[] | String;
  spanishShort_es_lt?: String;
  spanishShort_es_lte?: String;
  spanishShort_es_gt?: String;
  spanishShort_es_gte?: String;
  spanishShort_es_contains?: String;
  spanishShort_es_not_contains?: String;
  spanishShort_es_starts_with?: String;
  spanishShort_es_not_starts_with?: String;
  spanishShort_es_ends_with?: String;
  spanishShort_es_not_ends_with?: String;
  swedishLong_sv?: String;
  swedishLong_sv_not?: String;
  swedishLong_sv_in?: String[] | String;
  swedishLong_sv_not_in?: String[] | String;
  swedishLong_sv_lt?: String;
  swedishLong_sv_lte?: String;
  swedishLong_sv_gt?: String;
  swedishLong_sv_gte?: String;
  swedishLong_sv_contains?: String;
  swedishLong_sv_not_contains?: String;
  swedishLong_sv_starts_with?: String;
  swedishLong_sv_not_starts_with?: String;
  swedishLong_sv_ends_with?: String;
  swedishLong_sv_not_ends_with?: String;
  swedishShort_sv?: String;
  swedishShort_sv_not?: String;
  swedishShort_sv_in?: String[] | String;
  swedishShort_sv_not_in?: String[] | String;
  swedishShort_sv_lt?: String;
  swedishShort_sv_lte?: String;
  swedishShort_sv_gt?: String;
  swedishShort_sv_gte?: String;
  swedishShort_sv_contains?: String;
  swedishShort_sv_not_contains?: String;
  swedishShort_sv_starts_with?: String;
  swedishShort_sv_not_starts_with?: String;
  swedishShort_sv_ends_with?: String;
  swedishShort_sv_not_ends_with?: String;
  thaiLong_th?: String;
  thaiLong_th_not?: String;
  thaiLong_th_in?: String[] | String;
  thaiLong_th_not_in?: String[] | String;
  thaiLong_th_lt?: String;
  thaiLong_th_lte?: String;
  thaiLong_th_gt?: String;
  thaiLong_th_gte?: String;
  thaiLong_th_contains?: String;
  thaiLong_th_not_contains?: String;
  thaiLong_th_starts_with?: String;
  thaiLong_th_not_starts_with?: String;
  thaiLong_th_ends_with?: String;
  thaiLong_th_not_ends_with?: String;
  thaiShort_th?: String;
  thaiShort_th_not?: String;
  thaiShort_th_in?: String[] | String;
  thaiShort_th_not_in?: String[] | String;
  thaiShort_th_lt?: String;
  thaiShort_th_lte?: String;
  thaiShort_th_gt?: String;
  thaiShort_th_gte?: String;
  thaiShort_th_contains?: String;
  thaiShort_th_not_contains?: String;
  thaiShort_th_starts_with?: String;
  thaiShort_th_not_starts_with?: String;
  thaiShort_th_ends_with?: String;
  thaiShort_th_not_ends_with?: String;
  turkishLong_tr?: String;
  turkishLong_tr_not?: String;
  turkishLong_tr_in?: String[] | String;
  turkishLong_tr_not_in?: String[] | String;
  turkishLong_tr_lt?: String;
  turkishLong_tr_lte?: String;
  turkishLong_tr_gt?: String;
  turkishLong_tr_gte?: String;
  turkishLong_tr_contains?: String;
  turkishLong_tr_not_contains?: String;
  turkishLong_tr_starts_with?: String;
  turkishLong_tr_not_starts_with?: String;
  turkishLong_tr_ends_with?: String;
  turkishLong_tr_not_ends_with?: String;
  turkishShort_tr?: String;
  turkishShort_tr_not?: String;
  turkishShort_tr_in?: String[] | String;
  turkishShort_tr_not_in?: String[] | String;
  turkishShort_tr_lt?: String;
  turkishShort_tr_lte?: String;
  turkishShort_tr_gt?: String;
  turkishShort_tr_gte?: String;
  turkishShort_tr_contains?: String;
  turkishShort_tr_not_contains?: String;
  turkishShort_tr_starts_with?: String;
  turkishShort_tr_not_starts_with?: String;
  turkishShort_tr_ends_with?: String;
  turkishShort_tr_not_ends_with?: String;
  ukranianLong_uk?: String;
  ukranianLong_uk_not?: String;
  ukranianLong_uk_in?: String[] | String;
  ukranianLong_uk_not_in?: String[] | String;
  ukranianLong_uk_lt?: String;
  ukranianLong_uk_lte?: String;
  ukranianLong_uk_gt?: String;
  ukranianLong_uk_gte?: String;
  ukranianLong_uk_contains?: String;
  ukranianLong_uk_not_contains?: String;
  ukranianLong_uk_starts_with?: String;
  ukranianLong_uk_not_starts_with?: String;
  ukranianLong_uk_ends_with?: String;
  ukranianLong_uk_not_ends_with?: String;
  ukranianShort_uk?: String;
  ukranianShort_uk_not?: String;
  ukranianShort_uk_in?: String[] | String;
  ukranianShort_uk_not_in?: String[] | String;
  ukranianShort_uk_lt?: String;
  ukranianShort_uk_lte?: String;
  ukranianShort_uk_gt?: String;
  ukranianShort_uk_gte?: String;
  ukranianShort_uk_contains?: String;
  ukranianShort_uk_not_contains?: String;
  ukranianShort_uk_starts_with?: String;
  ukranianShort_uk_not_starts_with?: String;
  ukranianShort_uk_ends_with?: String;
  ukranianShort_uk_not_ends_with?: String;
  AND?: PartWhereInput[] | PartWhereInput;
  OR?: PartWhereInput[] | PartWhereInput;
  NOT?: PartWhereInput[] | PartWhereInput;
}

export interface UserWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  name?: String;
  name_not?: String;
  name_in?: String[] | String;
  name_not_in?: String[] | String;
  name_lt?: String;
  name_lte?: String;
  name_gt?: String;
  name_gte?: String;
  name_contains?: String;
  name_not_contains?: String;
  name_starts_with?: String;
  name_not_starts_with?: String;
  name_ends_with?: String;
  name_not_ends_with?: String;
  email?: String;
  email_not?: String;
  email_in?: String[] | String;
  email_not_in?: String[] | String;
  email_lt?: String;
  email_lte?: String;
  email_gt?: String;
  email_gte?: String;
  email_contains?: String;
  email_not_contains?: String;
  email_starts_with?: String;
  email_not_starts_with?: String;
  email_ends_with?: String;
  email_not_ends_with?: String;
  password?: String;
  password_not?: String;
  password_in?: String[] | String;
  password_not_in?: String[] | String;
  password_lt?: String;
  password_lte?: String;
  password_gt?: String;
  password_gte?: String;
  password_contains?: String;
  password_not_contains?: String;
  password_starts_with?: String;
  password_not_starts_with?: String;
  password_ends_with?: String;
  password_not_ends_with?: String;
  resetToken?: String;
  resetToken_not?: String;
  resetToken_in?: String[] | String;
  resetToken_not_in?: String[] | String;
  resetToken_lt?: String;
  resetToken_lte?: String;
  resetToken_gt?: String;
  resetToken_gte?: String;
  resetToken_contains?: String;
  resetToken_not_contains?: String;
  resetToken_starts_with?: String;
  resetToken_not_starts_with?: String;
  resetToken_ends_with?: String;
  resetToken_not_ends_with?: String;
  resetTokenExpiry?: Float;
  resetTokenExpiry_not?: Float;
  resetTokenExpiry_in?: Float[] | Float;
  resetTokenExpiry_not_in?: Float[] | Float;
  resetTokenExpiry_lt?: Float;
  resetTokenExpiry_lte?: Float;
  resetTokenExpiry_gt?: Float;
  resetTokenExpiry_gte?: Float;
  AND?: UserWhereInput[] | UserWhereInput;
  OR?: UserWhereInput[] | UserWhereInput;
  NOT?: UserWhereInput[] | UserWhereInput;
}

export interface PartSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: PartWhereInput;
  AND?: PartSubscriptionWhereInput[] | PartSubscriptionWhereInput;
  OR?: PartSubscriptionWhereInput[] | PartSubscriptionWhereInput;
  NOT?: PartSubscriptionWhereInput[] | PartSubscriptionWhereInput;
}

export interface UserSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: UserWhereInput;
  AND?: UserSubscriptionWhereInput[] | UserSubscriptionWhereInput;
  OR?: UserSubscriptionWhereInput[] | UserSubscriptionWhereInput;
  NOT?: UserSubscriptionWhereInput[] | UserSubscriptionWhereInput;
}

export interface UserUpdatepermissionsInput {
  set?: Permission[] | Permission;
}

export type UserWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  email?: String;
}>;

export interface UserCreateInput {
  name: String;
  email: String;
  password: String;
  resetToken?: String;
  resetTokenExpiry?: Float;
  permissions?: UserCreatepermissionsInput;
}

export interface NodeNode {
  id: ID_Output;
}

export interface UserEdge {
  node: User;
  cursor: String;
}

export interface UserEdgePromise extends Promise<UserEdge>, Fragmentable {
  node: <T = UserPromise>() => T;
  cursor: () => Promise<String>;
}

export interface UserEdgeSubscription
  extends Promise<AsyncIterator<UserEdge>>,
    Fragmentable {
  node: <T = UserSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface UserPreviousValues {
  id: ID_Output;
  name: String;
  email: String;
  password: String;
  resetToken?: String;
  resetTokenExpiry?: Float;
  permissions: Permission[];
}

export interface UserPreviousValuesPromise
  extends Promise<UserPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  name: () => Promise<String>;
  email: () => Promise<String>;
  password: () => Promise<String>;
  resetToken: () => Promise<String>;
  resetTokenExpiry: () => Promise<Float>;
  permissions: () => Promise<Permission[]>;
}

export interface UserPreviousValuesSubscription
  extends Promise<AsyncIterator<UserPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  name: () => Promise<AsyncIterator<String>>;
  email: () => Promise<AsyncIterator<String>>;
  password: () => Promise<AsyncIterator<String>>;
  resetToken: () => Promise<AsyncIterator<String>>;
  resetTokenExpiry: () => Promise<AsyncIterator<Float>>;
  permissions: () => Promise<AsyncIterator<Permission[]>>;
}

export interface AggregateUser {
  count: Int;
}

export interface AggregateUserPromise
  extends Promise<AggregateUser>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateUserSubscription
  extends Promise<AsyncIterator<AggregateUser>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface PageInfo {
  hasNextPage: Boolean;
  hasPreviousPage: Boolean;
  startCursor?: String;
  endCursor?: String;
}

export interface PageInfoPromise extends Promise<PageInfo>, Fragmentable {
  hasNextPage: () => Promise<Boolean>;
  hasPreviousPage: () => Promise<Boolean>;
  startCursor: () => Promise<String>;
  endCursor: () => Promise<String>;
}

export interface PageInfoSubscription
  extends Promise<AsyncIterator<PageInfo>>,
    Fragmentable {
  hasNextPage: () => Promise<AsyncIterator<Boolean>>;
  hasPreviousPage: () => Promise<AsyncIterator<Boolean>>;
  startCursor: () => Promise<AsyncIterator<String>>;
  endCursor: () => Promise<AsyncIterator<String>>;
}

export interface UserConnection {
  pageInfo: PageInfo;
  edges: UserEdge[];
}

export interface UserConnectionPromise
  extends Promise<UserConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<UserEdge>>() => T;
  aggregate: <T = AggregateUserPromise>() => T;
}

export interface UserConnectionSubscription
  extends Promise<AsyncIterator<UserConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<UserEdgeSubscription>>>() => T;
  aggregate: <T = AggregateUserSubscription>() => T;
}

export interface PartConnection {
  pageInfo: PageInfo;
  edges: PartEdge[];
}

export interface PartConnectionPromise
  extends Promise<PartConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<PartEdge>>() => T;
  aggregate: <T = AggregatePartPromise>() => T;
}

export interface PartConnectionSubscription
  extends Promise<AsyncIterator<PartConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<PartEdgeSubscription>>>() => T;
  aggregate: <T = AggregatePartSubscription>() => T;
}

export interface User {
  id: ID_Output;
  name: String;
  email: String;
  password: String;
  resetToken?: String;
  resetTokenExpiry?: Float;
  permissions: Permission[];
}

export interface UserPromise extends Promise<User>, Fragmentable {
  id: () => Promise<ID_Output>;
  name: () => Promise<String>;
  email: () => Promise<String>;
  password: () => Promise<String>;
  resetToken: () => Promise<String>;
  resetTokenExpiry: () => Promise<Float>;
  permissions: () => Promise<Permission[]>;
}

export interface UserSubscription
  extends Promise<AsyncIterator<User>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  name: () => Promise<AsyncIterator<String>>;
  email: () => Promise<AsyncIterator<String>>;
  password: () => Promise<AsyncIterator<String>>;
  resetToken: () => Promise<AsyncIterator<String>>;
  resetTokenExpiry: () => Promise<AsyncIterator<Float>>;
  permissions: () => Promise<AsyncIterator<Permission[]>>;
}

export interface PartSubscriptionPayload {
  mutation: MutationType;
  node: Part;
  updatedFields: String[];
  previousValues: PartPreviousValues;
}

export interface PartSubscriptionPayloadPromise
  extends Promise<PartSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = PartPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = PartPreviousValuesPromise>() => T;
}

export interface PartSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<PartSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = PartSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = PartPreviousValuesSubscription>() => T;
}

export interface Part {
  id: ID_Output;
  partNumber: String;
  arabicLong_ar_sa?: String;
  arabicShort_ar_sa?: String;
  bulgarianLong_bg?: String;
  bulgarianShort_bg?: String;
  catlanLong_ca?: String;
  catlanShort_ca?: String;
  chineseLong_zh_cn?: String;
  chineseShort_zh_cn?: String;
  chineseTLong_zh_tw?: String;
  chineseTShort_zh_tw?: String;
  croatianLong_hr?: String;
  croatianShort_hr?: String;
  czechLong_cs?: String;
  czechShort_cs?: String;
  danishLong_da?: String;
  danishShort_da?: String;
  dutchLong_nl?: String;
  dutchShort_nl?: String;
  englishLong_en?: String;
  englishShort_en?: String;
  extonianLong_et?: String;
  extonianShort_et?: String;
  finnishLong_fi?: String;
  finnishShort_fi?: String;
  frenchLong_fr?: String;
  frenchShort_fr?: String;
  germanLong_de?: String;
  germanShort_de?: String;
  greekLong_el?: String;
  greekShort_el?: String;
  hebrewLong_he?: String;
  hebrewShort_he?: String;
  hungarianLong_hu?: String;
  hungarianShort_hu?: String;
  icelandicLong_is?: String;
  icelandicShort_is?: String;
  indonesianLong_id?: String;
  indonesianShort_id?: String;
  italianLong_it?: String;
  italianShort_it?: String;
  japaneseLong_ja?: String;
  japaneseShort_ja?: String;
  koreanLong_ko?: String;
  koreanShort_ko?: String;
  latvianLong_lv?: String;
  latvianShort_lv?: String;
  lithuanianLong_lt?: String;
  lithuanianShort_lt?: String;
  malaysianLong_ms?: String;
  malaysianShort_ms?: String;
  norwegianLong_no?: String;
  norwegianShort_no?: String;
  polishLong_po?: String;
  polishShort_po?: String;
  portugeseLong_pt?: String;
  portugeseShort_pt?: String;
  romanianLong_ro?: String;
  romanianShort_ro?: String;
  russianLong_ru?: String;
  russianShort_ru?: String;
  serbianLong_sr?: String;
  serbianShort_sr?: String;
  slovakLong_sk?: String;
  slovakShort_sk?: String;
  slovenianLong_sl?: String;
  slovenianShort_sl?: String;
  spanishLong_es?: String;
  spanishShort_es?: String;
  swedishLong_sv?: String;
  swedishShort_sv?: String;
  thaiLong_th?: String;
  thaiShort_th?: String;
  turkishLong_tr?: String;
  turkishShort_tr?: String;
  ukranianLong_uk?: String;
  ukranianShort_uk?: String;
}

export interface PartPromise extends Promise<Part>, Fragmentable {
  id: () => Promise<ID_Output>;
  partNumber: () => Promise<String>;
  arabicLong_ar_sa: () => Promise<String>;
  arabicShort_ar_sa: () => Promise<String>;
  bulgarianLong_bg: () => Promise<String>;
  bulgarianShort_bg: () => Promise<String>;
  catlanLong_ca: () => Promise<String>;
  catlanShort_ca: () => Promise<String>;
  chineseLong_zh_cn: () => Promise<String>;
  chineseShort_zh_cn: () => Promise<String>;
  chineseTLong_zh_tw: () => Promise<String>;
  chineseTShort_zh_tw: () => Promise<String>;
  croatianLong_hr: () => Promise<String>;
  croatianShort_hr: () => Promise<String>;
  czechLong_cs: () => Promise<String>;
  czechShort_cs: () => Promise<String>;
  danishLong_da: () => Promise<String>;
  danishShort_da: () => Promise<String>;
  dutchLong_nl: () => Promise<String>;
  dutchShort_nl: () => Promise<String>;
  englishLong_en: () => Promise<String>;
  englishShort_en: () => Promise<String>;
  extonianLong_et: () => Promise<String>;
  extonianShort_et: () => Promise<String>;
  finnishLong_fi: () => Promise<String>;
  finnishShort_fi: () => Promise<String>;
  frenchLong_fr: () => Promise<String>;
  frenchShort_fr: () => Promise<String>;
  germanLong_de: () => Promise<String>;
  germanShort_de: () => Promise<String>;
  greekLong_el: () => Promise<String>;
  greekShort_el: () => Promise<String>;
  hebrewLong_he: () => Promise<String>;
  hebrewShort_he: () => Promise<String>;
  hungarianLong_hu: () => Promise<String>;
  hungarianShort_hu: () => Promise<String>;
  icelandicLong_is: () => Promise<String>;
  icelandicShort_is: () => Promise<String>;
  indonesianLong_id: () => Promise<String>;
  indonesianShort_id: () => Promise<String>;
  italianLong_it: () => Promise<String>;
  italianShort_it: () => Promise<String>;
  japaneseLong_ja: () => Promise<String>;
  japaneseShort_ja: () => Promise<String>;
  koreanLong_ko: () => Promise<String>;
  koreanShort_ko: () => Promise<String>;
  latvianLong_lv: () => Promise<String>;
  latvianShort_lv: () => Promise<String>;
  lithuanianLong_lt: () => Promise<String>;
  lithuanianShort_lt: () => Promise<String>;
  malaysianLong_ms: () => Promise<String>;
  malaysianShort_ms: () => Promise<String>;
  norwegianLong_no: () => Promise<String>;
  norwegianShort_no: () => Promise<String>;
  polishLong_po: () => Promise<String>;
  polishShort_po: () => Promise<String>;
  portugeseLong_pt: () => Promise<String>;
  portugeseShort_pt: () => Promise<String>;
  romanianLong_ro: () => Promise<String>;
  romanianShort_ro: () => Promise<String>;
  russianLong_ru: () => Promise<String>;
  russianShort_ru: () => Promise<String>;
  serbianLong_sr: () => Promise<String>;
  serbianShort_sr: () => Promise<String>;
  slovakLong_sk: () => Promise<String>;
  slovakShort_sk: () => Promise<String>;
  slovenianLong_sl: () => Promise<String>;
  slovenianShort_sl: () => Promise<String>;
  spanishLong_es: () => Promise<String>;
  spanishShort_es: () => Promise<String>;
  swedishLong_sv: () => Promise<String>;
  swedishShort_sv: () => Promise<String>;
  thaiLong_th: () => Promise<String>;
  thaiShort_th: () => Promise<String>;
  turkishLong_tr: () => Promise<String>;
  turkishShort_tr: () => Promise<String>;
  ukranianLong_uk: () => Promise<String>;
  ukranianShort_uk: () => Promise<String>;
}

export interface PartSubscription
  extends Promise<AsyncIterator<Part>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  partNumber: () => Promise<AsyncIterator<String>>;
  arabicLong_ar_sa: () => Promise<AsyncIterator<String>>;
  arabicShort_ar_sa: () => Promise<AsyncIterator<String>>;
  bulgarianLong_bg: () => Promise<AsyncIterator<String>>;
  bulgarianShort_bg: () => Promise<AsyncIterator<String>>;
  catlanLong_ca: () => Promise<AsyncIterator<String>>;
  catlanShort_ca: () => Promise<AsyncIterator<String>>;
  chineseLong_zh_cn: () => Promise<AsyncIterator<String>>;
  chineseShort_zh_cn: () => Promise<AsyncIterator<String>>;
  chineseTLong_zh_tw: () => Promise<AsyncIterator<String>>;
  chineseTShort_zh_tw: () => Promise<AsyncIterator<String>>;
  croatianLong_hr: () => Promise<AsyncIterator<String>>;
  croatianShort_hr: () => Promise<AsyncIterator<String>>;
  czechLong_cs: () => Promise<AsyncIterator<String>>;
  czechShort_cs: () => Promise<AsyncIterator<String>>;
  danishLong_da: () => Promise<AsyncIterator<String>>;
  danishShort_da: () => Promise<AsyncIterator<String>>;
  dutchLong_nl: () => Promise<AsyncIterator<String>>;
  dutchShort_nl: () => Promise<AsyncIterator<String>>;
  englishLong_en: () => Promise<AsyncIterator<String>>;
  englishShort_en: () => Promise<AsyncIterator<String>>;
  extonianLong_et: () => Promise<AsyncIterator<String>>;
  extonianShort_et: () => Promise<AsyncIterator<String>>;
  finnishLong_fi: () => Promise<AsyncIterator<String>>;
  finnishShort_fi: () => Promise<AsyncIterator<String>>;
  frenchLong_fr: () => Promise<AsyncIterator<String>>;
  frenchShort_fr: () => Promise<AsyncIterator<String>>;
  germanLong_de: () => Promise<AsyncIterator<String>>;
  germanShort_de: () => Promise<AsyncIterator<String>>;
  greekLong_el: () => Promise<AsyncIterator<String>>;
  greekShort_el: () => Promise<AsyncIterator<String>>;
  hebrewLong_he: () => Promise<AsyncIterator<String>>;
  hebrewShort_he: () => Promise<AsyncIterator<String>>;
  hungarianLong_hu: () => Promise<AsyncIterator<String>>;
  hungarianShort_hu: () => Promise<AsyncIterator<String>>;
  icelandicLong_is: () => Promise<AsyncIterator<String>>;
  icelandicShort_is: () => Promise<AsyncIterator<String>>;
  indonesianLong_id: () => Promise<AsyncIterator<String>>;
  indonesianShort_id: () => Promise<AsyncIterator<String>>;
  italianLong_it: () => Promise<AsyncIterator<String>>;
  italianShort_it: () => Promise<AsyncIterator<String>>;
  japaneseLong_ja: () => Promise<AsyncIterator<String>>;
  japaneseShort_ja: () => Promise<AsyncIterator<String>>;
  koreanLong_ko: () => Promise<AsyncIterator<String>>;
  koreanShort_ko: () => Promise<AsyncIterator<String>>;
  latvianLong_lv: () => Promise<AsyncIterator<String>>;
  latvianShort_lv: () => Promise<AsyncIterator<String>>;
  lithuanianLong_lt: () => Promise<AsyncIterator<String>>;
  lithuanianShort_lt: () => Promise<AsyncIterator<String>>;
  malaysianLong_ms: () => Promise<AsyncIterator<String>>;
  malaysianShort_ms: () => Promise<AsyncIterator<String>>;
  norwegianLong_no: () => Promise<AsyncIterator<String>>;
  norwegianShort_no: () => Promise<AsyncIterator<String>>;
  polishLong_po: () => Promise<AsyncIterator<String>>;
  polishShort_po: () => Promise<AsyncIterator<String>>;
  portugeseLong_pt: () => Promise<AsyncIterator<String>>;
  portugeseShort_pt: () => Promise<AsyncIterator<String>>;
  romanianLong_ro: () => Promise<AsyncIterator<String>>;
  romanianShort_ro: () => Promise<AsyncIterator<String>>;
  russianLong_ru: () => Promise<AsyncIterator<String>>;
  russianShort_ru: () => Promise<AsyncIterator<String>>;
  serbianLong_sr: () => Promise<AsyncIterator<String>>;
  serbianShort_sr: () => Promise<AsyncIterator<String>>;
  slovakLong_sk: () => Promise<AsyncIterator<String>>;
  slovakShort_sk: () => Promise<AsyncIterator<String>>;
  slovenianLong_sl: () => Promise<AsyncIterator<String>>;
  slovenianShort_sl: () => Promise<AsyncIterator<String>>;
  spanishLong_es: () => Promise<AsyncIterator<String>>;
  spanishShort_es: () => Promise<AsyncIterator<String>>;
  swedishLong_sv: () => Promise<AsyncIterator<String>>;
  swedishShort_sv: () => Promise<AsyncIterator<String>>;
  thaiLong_th: () => Promise<AsyncIterator<String>>;
  thaiShort_th: () => Promise<AsyncIterator<String>>;
  turkishLong_tr: () => Promise<AsyncIterator<String>>;
  turkishShort_tr: () => Promise<AsyncIterator<String>>;
  ukranianLong_uk: () => Promise<AsyncIterator<String>>;
  ukranianShort_uk: () => Promise<AsyncIterator<String>>;
}

export interface AggregatePart {
  count: Int;
}

export interface AggregatePartPromise
  extends Promise<AggregatePart>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregatePartSubscription
  extends Promise<AsyncIterator<AggregatePart>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface BatchPayload {
  count: Long;
}

export interface BatchPayloadPromise
  extends Promise<BatchPayload>,
    Fragmentable {
  count: () => Promise<Long>;
}

export interface BatchPayloadSubscription
  extends Promise<AsyncIterator<BatchPayload>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Long>>;
}

export interface PartPreviousValues {
  id: ID_Output;
  partNumber: String;
  arabicLong_ar_sa?: String;
  arabicShort_ar_sa?: String;
  bulgarianLong_bg?: String;
  bulgarianShort_bg?: String;
  catlanLong_ca?: String;
  catlanShort_ca?: String;
  chineseLong_zh_cn?: String;
  chineseShort_zh_cn?: String;
  chineseTLong_zh_tw?: String;
  chineseTShort_zh_tw?: String;
  croatianLong_hr?: String;
  croatianShort_hr?: String;
  czechLong_cs?: String;
  czechShort_cs?: String;
  danishLong_da?: String;
  danishShort_da?: String;
  dutchLong_nl?: String;
  dutchShort_nl?: String;
  englishLong_en?: String;
  englishShort_en?: String;
  extonianLong_et?: String;
  extonianShort_et?: String;
  finnishLong_fi?: String;
  finnishShort_fi?: String;
  frenchLong_fr?: String;
  frenchShort_fr?: String;
  germanLong_de?: String;
  germanShort_de?: String;
  greekLong_el?: String;
  greekShort_el?: String;
  hebrewLong_he?: String;
  hebrewShort_he?: String;
  hungarianLong_hu?: String;
  hungarianShort_hu?: String;
  icelandicLong_is?: String;
  icelandicShort_is?: String;
  indonesianLong_id?: String;
  indonesianShort_id?: String;
  italianLong_it?: String;
  italianShort_it?: String;
  japaneseLong_ja?: String;
  japaneseShort_ja?: String;
  koreanLong_ko?: String;
  koreanShort_ko?: String;
  latvianLong_lv?: String;
  latvianShort_lv?: String;
  lithuanianLong_lt?: String;
  lithuanianShort_lt?: String;
  malaysianLong_ms?: String;
  malaysianShort_ms?: String;
  norwegianLong_no?: String;
  norwegianShort_no?: String;
  polishLong_po?: String;
  polishShort_po?: String;
  portugeseLong_pt?: String;
  portugeseShort_pt?: String;
  romanianLong_ro?: String;
  romanianShort_ro?: String;
  russianLong_ru?: String;
  russianShort_ru?: String;
  serbianLong_sr?: String;
  serbianShort_sr?: String;
  slovakLong_sk?: String;
  slovakShort_sk?: String;
  slovenianLong_sl?: String;
  slovenianShort_sl?: String;
  spanishLong_es?: String;
  spanishShort_es?: String;
  swedishLong_sv?: String;
  swedishShort_sv?: String;
  thaiLong_th?: String;
  thaiShort_th?: String;
  turkishLong_tr?: String;
  turkishShort_tr?: String;
  ukranianLong_uk?: String;
  ukranianShort_uk?: String;
}

export interface PartPreviousValuesPromise
  extends Promise<PartPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  partNumber: () => Promise<String>;
  arabicLong_ar_sa: () => Promise<String>;
  arabicShort_ar_sa: () => Promise<String>;
  bulgarianLong_bg: () => Promise<String>;
  bulgarianShort_bg: () => Promise<String>;
  catlanLong_ca: () => Promise<String>;
  catlanShort_ca: () => Promise<String>;
  chineseLong_zh_cn: () => Promise<String>;
  chineseShort_zh_cn: () => Promise<String>;
  chineseTLong_zh_tw: () => Promise<String>;
  chineseTShort_zh_tw: () => Promise<String>;
  croatianLong_hr: () => Promise<String>;
  croatianShort_hr: () => Promise<String>;
  czechLong_cs: () => Promise<String>;
  czechShort_cs: () => Promise<String>;
  danishLong_da: () => Promise<String>;
  danishShort_da: () => Promise<String>;
  dutchLong_nl: () => Promise<String>;
  dutchShort_nl: () => Promise<String>;
  englishLong_en: () => Promise<String>;
  englishShort_en: () => Promise<String>;
  extonianLong_et: () => Promise<String>;
  extonianShort_et: () => Promise<String>;
  finnishLong_fi: () => Promise<String>;
  finnishShort_fi: () => Promise<String>;
  frenchLong_fr: () => Promise<String>;
  frenchShort_fr: () => Promise<String>;
  germanLong_de: () => Promise<String>;
  germanShort_de: () => Promise<String>;
  greekLong_el: () => Promise<String>;
  greekShort_el: () => Promise<String>;
  hebrewLong_he: () => Promise<String>;
  hebrewShort_he: () => Promise<String>;
  hungarianLong_hu: () => Promise<String>;
  hungarianShort_hu: () => Promise<String>;
  icelandicLong_is: () => Promise<String>;
  icelandicShort_is: () => Promise<String>;
  indonesianLong_id: () => Promise<String>;
  indonesianShort_id: () => Promise<String>;
  italianLong_it: () => Promise<String>;
  italianShort_it: () => Promise<String>;
  japaneseLong_ja: () => Promise<String>;
  japaneseShort_ja: () => Promise<String>;
  koreanLong_ko: () => Promise<String>;
  koreanShort_ko: () => Promise<String>;
  latvianLong_lv: () => Promise<String>;
  latvianShort_lv: () => Promise<String>;
  lithuanianLong_lt: () => Promise<String>;
  lithuanianShort_lt: () => Promise<String>;
  malaysianLong_ms: () => Promise<String>;
  malaysianShort_ms: () => Promise<String>;
  norwegianLong_no: () => Promise<String>;
  norwegianShort_no: () => Promise<String>;
  polishLong_po: () => Promise<String>;
  polishShort_po: () => Promise<String>;
  portugeseLong_pt: () => Promise<String>;
  portugeseShort_pt: () => Promise<String>;
  romanianLong_ro: () => Promise<String>;
  romanianShort_ro: () => Promise<String>;
  russianLong_ru: () => Promise<String>;
  russianShort_ru: () => Promise<String>;
  serbianLong_sr: () => Promise<String>;
  serbianShort_sr: () => Promise<String>;
  slovakLong_sk: () => Promise<String>;
  slovakShort_sk: () => Promise<String>;
  slovenianLong_sl: () => Promise<String>;
  slovenianShort_sl: () => Promise<String>;
  spanishLong_es: () => Promise<String>;
  spanishShort_es: () => Promise<String>;
  swedishLong_sv: () => Promise<String>;
  swedishShort_sv: () => Promise<String>;
  thaiLong_th: () => Promise<String>;
  thaiShort_th: () => Promise<String>;
  turkishLong_tr: () => Promise<String>;
  turkishShort_tr: () => Promise<String>;
  ukranianLong_uk: () => Promise<String>;
  ukranianShort_uk: () => Promise<String>;
}

export interface PartPreviousValuesSubscription
  extends Promise<AsyncIterator<PartPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  partNumber: () => Promise<AsyncIterator<String>>;
  arabicLong_ar_sa: () => Promise<AsyncIterator<String>>;
  arabicShort_ar_sa: () => Promise<AsyncIterator<String>>;
  bulgarianLong_bg: () => Promise<AsyncIterator<String>>;
  bulgarianShort_bg: () => Promise<AsyncIterator<String>>;
  catlanLong_ca: () => Promise<AsyncIterator<String>>;
  catlanShort_ca: () => Promise<AsyncIterator<String>>;
  chineseLong_zh_cn: () => Promise<AsyncIterator<String>>;
  chineseShort_zh_cn: () => Promise<AsyncIterator<String>>;
  chineseTLong_zh_tw: () => Promise<AsyncIterator<String>>;
  chineseTShort_zh_tw: () => Promise<AsyncIterator<String>>;
  croatianLong_hr: () => Promise<AsyncIterator<String>>;
  croatianShort_hr: () => Promise<AsyncIterator<String>>;
  czechLong_cs: () => Promise<AsyncIterator<String>>;
  czechShort_cs: () => Promise<AsyncIterator<String>>;
  danishLong_da: () => Promise<AsyncIterator<String>>;
  danishShort_da: () => Promise<AsyncIterator<String>>;
  dutchLong_nl: () => Promise<AsyncIterator<String>>;
  dutchShort_nl: () => Promise<AsyncIterator<String>>;
  englishLong_en: () => Promise<AsyncIterator<String>>;
  englishShort_en: () => Promise<AsyncIterator<String>>;
  extonianLong_et: () => Promise<AsyncIterator<String>>;
  extonianShort_et: () => Promise<AsyncIterator<String>>;
  finnishLong_fi: () => Promise<AsyncIterator<String>>;
  finnishShort_fi: () => Promise<AsyncIterator<String>>;
  frenchLong_fr: () => Promise<AsyncIterator<String>>;
  frenchShort_fr: () => Promise<AsyncIterator<String>>;
  germanLong_de: () => Promise<AsyncIterator<String>>;
  germanShort_de: () => Promise<AsyncIterator<String>>;
  greekLong_el: () => Promise<AsyncIterator<String>>;
  greekShort_el: () => Promise<AsyncIterator<String>>;
  hebrewLong_he: () => Promise<AsyncIterator<String>>;
  hebrewShort_he: () => Promise<AsyncIterator<String>>;
  hungarianLong_hu: () => Promise<AsyncIterator<String>>;
  hungarianShort_hu: () => Promise<AsyncIterator<String>>;
  icelandicLong_is: () => Promise<AsyncIterator<String>>;
  icelandicShort_is: () => Promise<AsyncIterator<String>>;
  indonesianLong_id: () => Promise<AsyncIterator<String>>;
  indonesianShort_id: () => Promise<AsyncIterator<String>>;
  italianLong_it: () => Promise<AsyncIterator<String>>;
  italianShort_it: () => Promise<AsyncIterator<String>>;
  japaneseLong_ja: () => Promise<AsyncIterator<String>>;
  japaneseShort_ja: () => Promise<AsyncIterator<String>>;
  koreanLong_ko: () => Promise<AsyncIterator<String>>;
  koreanShort_ko: () => Promise<AsyncIterator<String>>;
  latvianLong_lv: () => Promise<AsyncIterator<String>>;
  latvianShort_lv: () => Promise<AsyncIterator<String>>;
  lithuanianLong_lt: () => Promise<AsyncIterator<String>>;
  lithuanianShort_lt: () => Promise<AsyncIterator<String>>;
  malaysianLong_ms: () => Promise<AsyncIterator<String>>;
  malaysianShort_ms: () => Promise<AsyncIterator<String>>;
  norwegianLong_no: () => Promise<AsyncIterator<String>>;
  norwegianShort_no: () => Promise<AsyncIterator<String>>;
  polishLong_po: () => Promise<AsyncIterator<String>>;
  polishShort_po: () => Promise<AsyncIterator<String>>;
  portugeseLong_pt: () => Promise<AsyncIterator<String>>;
  portugeseShort_pt: () => Promise<AsyncIterator<String>>;
  romanianLong_ro: () => Promise<AsyncIterator<String>>;
  romanianShort_ro: () => Promise<AsyncIterator<String>>;
  russianLong_ru: () => Promise<AsyncIterator<String>>;
  russianShort_ru: () => Promise<AsyncIterator<String>>;
  serbianLong_sr: () => Promise<AsyncIterator<String>>;
  serbianShort_sr: () => Promise<AsyncIterator<String>>;
  slovakLong_sk: () => Promise<AsyncIterator<String>>;
  slovakShort_sk: () => Promise<AsyncIterator<String>>;
  slovenianLong_sl: () => Promise<AsyncIterator<String>>;
  slovenianShort_sl: () => Promise<AsyncIterator<String>>;
  spanishLong_es: () => Promise<AsyncIterator<String>>;
  spanishShort_es: () => Promise<AsyncIterator<String>>;
  swedishLong_sv: () => Promise<AsyncIterator<String>>;
  swedishShort_sv: () => Promise<AsyncIterator<String>>;
  thaiLong_th: () => Promise<AsyncIterator<String>>;
  thaiShort_th: () => Promise<AsyncIterator<String>>;
  turkishLong_tr: () => Promise<AsyncIterator<String>>;
  turkishShort_tr: () => Promise<AsyncIterator<String>>;
  ukranianLong_uk: () => Promise<AsyncIterator<String>>;
  ukranianShort_uk: () => Promise<AsyncIterator<String>>;
}

export interface UserSubscriptionPayload {
  mutation: MutationType;
  node: User;
  updatedFields: String[];
  previousValues: UserPreviousValues;
}

export interface UserSubscriptionPayloadPromise
  extends Promise<UserSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = UserPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = UserPreviousValuesPromise>() => T;
}

export interface UserSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<UserSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = UserSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = UserPreviousValuesSubscription>() => T;
}

export interface PartEdge {
  node: Part;
  cursor: String;
}

export interface PartEdgePromise extends Promise<PartEdge>, Fragmentable {
  node: <T = PartPromise>() => T;
  cursor: () => Promise<String>;
}

export interface PartEdgeSubscription
  extends Promise<AsyncIterator<PartEdge>>,
    Fragmentable {
  node: <T = PartSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

/*
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. 
*/
export type Int = number;

/*
The `Boolean` scalar type represents `true` or `false`.
*/
export type Boolean = boolean;

export type Long = string;

/*
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
*/
export type ID_Input = string | number;
export type ID_Output = string;

/*
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
*/
export type String = string;

/*
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). 
*/
export type Float = number;

/**
 * Model Metadata
 */

export const models: Model[] = [
  {
    name: "Permission",
    embedded: false
  },
  {
    name: "User",
    embedded: false
  },
  {
    name: "Part",
    embedded: false
  }
];

/**
 * Type Defs
 */

export const prisma: Prisma;
